// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Image generation flow for social media posts.
 *
 * - generatePostImage - A function that handles the image generation process.
 * - GeneratePostImageInput - The input type for the generatePostImage function.
 * - GeneratePostImageOutput - The return type for the generatePostImage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePostImageInputSchema = z.object({
  postDescription: z
    .string()
    .describe('The description of the social media post for generating image.'),
});
export type GeneratePostImageInput = z.infer<typeof GeneratePostImageInputSchema>;

const GeneratePostImageOutputSchema = z.object({
  imageUri: z
    .string()
    .describe(
      'The data URI of the generated image for the social media post. The data URI must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // KEEP THIS COMMENT
    ),
});
export type GeneratePostImageOutput = z.infer<typeof GeneratePostImageOutputSchema>;

export async function generatePostImage(input: GeneratePostImageInput): Promise<GeneratePostImageOutput> {
  return generatePostImageFlow(input);
}

const generatePostImagePrompt = ai.definePrompt({
  name: 'generatePostImagePrompt',
  input: {schema: GeneratePostImageInputSchema},
  output: {schema: GeneratePostImageOutputSchema},
  prompt: `You are an AI social media image generator. Based on the social media post description, you will generate an image that matches the theme of the post.

Post Description: {{{postDescription}}}

`,
});

const generatePostImageFlow = ai.defineFlow(
  {
    name: 'generatePostImageFlow',
    inputSchema: GeneratePostImageInputSchema,
    outputSchema: GeneratePostImageOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      // IMPORTANT: ONLY the googleai/gemini-2.0-flash-exp model is able to generate images. You MUST use exactly this model to generate images.
      model: 'googleai/gemini-2.0-flash-exp',
      prompt: [
        {
          text: `Generate an image that visually complements the following social media post description: ${input.postDescription}`,
        },
      ],
      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });

    return {imageUri: media.url!};
  }
);
