
// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Image generation flow for social media posts, with optional text overlay,
 * considering niche, category, image type, post topic, visual description, and overlay text styling
 * for highly personalized results.
 *
 * - generatePostImage - A function that handles the image generation process.
 * - GeneratePostImageInput - The input type for the generatePostImage function.
 * - GeneratePostImageOutput - The return type for the generatePostImage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePostImageInputSchema = z.object({
  imageVisualPrompt: z
    .string()
    .describe('A detailed description of what the image should visually depict.'),
  overlayText: z
    .string()
    .optional() 
    .describe('The AI-generated hook or short text to prominently display on the generated image. If empty, no text will be overlaid.'),
  niche: z.string().describe('The niche of the post (e.g., Food, Travel, Technology). This is required.'),
  category: z.string().describe('The category of the post (e.g., Recipe, Landscape, Product Review). This is required.'),
  imageType: z.string().describe('The desired artistic style of the image (e.g., Photography, Illustration, Modern Design). This is required.'),
  postTopic: z.string().describe('The original topic or idea of the social media post, for broader context.'),
  postType: z.string().optional().describe('The type of the post (e.g., Tips, Educational, Promotional) for additional context.'),
  overlayFontStyle: z.string().optional().describe('The desired font style for the overlay text (e.g., Modern & Clean, Elegant Script, Magazine Headline).'),
  overlayAlignment: z.string().optional().describe('The alignment of the overlay text on the image (e.g., Top Left, Middle Center, Bottom Right).'),
  overlayFontSize: z.string().optional().describe('The relative font size for the overlay text (e.g., Small, Medium).'),
});
export type GeneratePostImageInput = z.infer<typeof GeneratePostImageInputSchema>;

const GeneratePostImageOutputSchema = z.object({
  imageUri: z
    .string()
    .describe(
      'The data URI of the generated image for the social media post. The data URI must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // KEEP THIS COMMENT
    ),
});
export type GeneratePostImageOutput = z.infer<typeof GeneratePostImageOutputSchema>;

export async function generatePostImage(input: GeneratePostImageInput): Promise<GeneratePostImageOutput> {
  return generatePostImageFlow(input);
}

const generatePostImageFlow = ai.defineFlow(
  {
    name: 'generatePostImageFlow',
    inputSchema: GeneratePostImageInputSchema,
    outputSchema: GeneratePostImageOutputSchema,
  },
  async (input: GeneratePostImageInput) => {
    let imagePrompt = `You are an AI image generation specialist and professional graphic designer.
Your primary task is to **synthesize all the provided information** to create a detailed, visually rich, and contextually relevant image suitable for a high-impact social media post.
The image's core content and composition must be based on the **visual description**: "${input.imageVisualPrompt}".
This image is for a social media post related to the **general topic**: "${input.postTopic}".

The image creation must strictly incorporate and harmonize the following:
- **Niche**: "${input.niche}"
- **Category**: "${input.category}"
- **Image Style**: "${input.imageType}"`;

    if (input.postType) {
      imagePrompt += `\n- **Post Type Context**: The image is part of a "${input.postType}" post. This must influence the overall mood, subtle thematic elements, and ensure it complements the main visual description and topic.`;
    }

    // Instruction for text overlay or no text
    if (input.overlayText && input.overlayText.trim() !== '') {
      imagePrompt += `\n\nAfter establishing a base image that meticulously fulfills all the above requirements (visual description, topic, niche, category, image style, and post type context), you will then **prominently and artistically integrate** the following AI-generated hook text onto it: "${input.overlayText}".`;
      
      imagePrompt += `\n\n**Hook Text Overlay Instructions (apply to the established base image):**
The text must be seamlessly and professionally integrated into the generated image's design, appearing as a deliberate graphic element, not an afterthought.
Think like a graphic designer creating a polished piece for social media:
- The text's style, color, and placement must harmonize with the primary image aesthetic, mood, and the specified niche, category, and image type.
- Render the text in an interesting and visually engaging manner, making it a focal point while still feeling like an organic part of the complete visual.
- Avoid a flat, 'pasted-on' look. The text should appear as if it naturally belongs in the image composition. Consider subtle depth, shadows, or blending effects appropriate for the style to enhance integration and readability.

Key considerations for the hook text integration:
- Typography & Style: Pay close attention to typography. The text should not only be readable but also enhance the image's overall design quality.
  - Color Variation: Creatively apply color variations within the overlay text. For example, make one or two key words a different, complementary color, or use a subtle gradient if appropriate for the style. This should enhance visual appeal and hierarchy.
  - Font Emphasis: For added visual interest and emphasis, attempt to render approximately two important words from the hook text in a slightly different but harmonious font style (e.g., a bolder weight, a subtle script if the main font is sans-serif, or vice-versa). This should complement the primary chosen font style if one is specified.
  - Readability: Above all, ensure the text remains clear, legible, and well-contrasted against the image background.
`;

      if (input.overlayFontStyle) {
        imagePrompt += `\n- Primary Text Font Style: The overall text should generally adhere to a style best described as '${input.overlayFontStyle}'. The font emphasis for specific words should be a variation or complement to this primary style. Ensure this chosen style is applied professionally.`;
      }
      if (input.overlayAlignment) {
        imagePrompt += `\n- Text Alignment: Position the text on the primary image according to '${input.overlayAlignment}'. Ensure this placement considers the image's composition for optimal visual balance and impact.`;
      }
      if (input.overlayFontSize) {
        imagePrompt += `\n- Text Font Size: The text should appear in a '${input.overlayFontSize}' relative size. 'Medium' is a balanced default. 'Small' should be more subtle but still readable. The size should feel intentional within the design.`;
      }
      imagePrompt += `\nConsider the overall image composition, lighting, and depth to ensure the text placement and styling feel natural, engaging, and expertly integrated, making the hook an appealing and integral part of the graphic. The final result should look like a polished piece of social media content.`;

    } else {
      // No overlay text
      imagePrompt += `\n\nGenerate a high-quality, detailed image based *purely* on the visual description ("${input.imageVisualPrompt}"), general topic ("${input.postTopic}"), Niche ("${input.niche}"), Category ("${input.category}"), Image Style ("${input.imageType}")`;
      if (input.postType) {
        imagePrompt += `, and Post Type Context ("${input.postType}")`;
      }
      imagePrompt += `. No text should be overlaid on this image. Ensure the image is visually rich and compelling on its own.`;
    }
    
    imagePrompt += `\n\n**Final Output Goals:**
This image is intended for a social media post. Therefore:
- Ensure the composition is engaging, high-quality, and aesthetically pleasing, looking professionally crafted.
- The image should be detailed and visually rich.
- **For platforms like Instagram, a square aspect ratio is ideal; please prioritize generating a square image unless the visual description or image style strongly dictates otherwise.**
- The final image should be well-suited for a typical social media feed, and all elements (visuals, text overlay if present, style, niche, category, post topic/type) must work together harmoniously.`;
    
    const {media} = await ai.generate({
      model: 'googleai/gemini-2.0-flash-exp',
      prompt: [
        {
          text: imagePrompt,
        },
      ],
      config: {
        responseModalities: ['TEXT', 'IMAGE'], 
      },
    });

    if (!media || !media.url) {
      throw new Error('Image generation failed or did not return a valid image URI.');
    }

    return {imageUri: media.url};
  }
);

